/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package org.mainframe;

import java.awt.Color;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;

import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JTable;

import net.proteanit.sql.DbUtils;

import org.mainframe.common.model.DBUtil;
import org.mainframe.common.model.RoomModel;
import org.mainframe.common.model.SemesterModel;
import org.mainframe.common.bean.RoomBean;
import org.mainframe.common.bean.SemesterBean;
import javax.swing.JButton;
import javax.swing.JComboBox;
import javax.swing.JScrollPane;
import javax.swing.JTextField;

/**
 *
 * @author V
 */
public class RoomFrame extends javax.swing.JInternalFrame {

    /**
     * Creates new form UserJInternalFrame
     */
    public RoomFrame() {
        initComponents();
        roomMsgLabel.setVisible(false);
        getContentPane().setBackground(Color.WHITE);
        try{
            String sql = " Select DISTINCT CourseCode From Course ";
            Connection con = DBUtil.getDataSource().getConnection();
		PreparedStatement ps =	con.prepareStatement(sql);
		ResultSet rs = ps.executeQuery();
              
                while(rs.next()){
                   courseCode.addItem(rs.getString(1));
                }
               
                rs.close();
                ps.close();
                con.close();
        }catch(Exception exp){
            JOptionPane.showMessageDialog(this, "exception raised"+exp);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblRoomNumber = new javax.swing.JLabel();
        lblCourseCode = new javax.swing.JLabel();
        roomNumber = new javax.swing.JTextField();
        addRoomButton = new javax.swing.JButton();
        updateRoomButton = new javax.swing.JButton();
        deleteRoomButton = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        RoomDataTable = new javax.swing.JTable();
        roomMsgLabel = new javax.swing.JLabel();
        capacity = new javax.swing.JTextField();
        lblCapacity = new javax.swing.JLabel();
        cancelRoomButton = new javax.swing.JButton();
        courseCode = new javax.swing.JComboBox<>();

        setBackground(new java.awt.Color(255, 255, 255));
        setClosable(true);
        setMaximizable(true);
        setResizable(true);
        setTitle("RoomInternalFrame");

        lblRoomNumber.setFont(new java.awt.Font("Tahoma", 2, 14)); // NOI18N
        lblRoomNumber.setText("Room Number");

        lblCourseCode.setFont(new java.awt.Font("Tahoma", 2, 14)); // NOI18N
        lblCourseCode.setText("Course Code");

        addRoomButton.setBackground(new java.awt.Color(102, 255, 255));
        addRoomButton.setFont(new java.awt.Font("Tahoma", 2, 11)); // NOI18N
        addRoomButton.setText("Add");
        addRoomButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addRoomButtonActionPerformed(evt);
            }
        });

        updateRoomButton.setBackground(new java.awt.Color(102, 255, 255));
        updateRoomButton.setFont(new java.awt.Font("Tahoma", 2, 11)); // NOI18N
        updateRoomButton.setText("Update");
        updateRoomButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateRoomButtonActionPerformed(evt);
            }
        });

        deleteRoomButton.setBackground(new java.awt.Color(102, 255, 255));
        deleteRoomButton.setFont(new java.awt.Font("Tahoma", 2, 11)); // NOI18N
        deleteRoomButton.setText("Delete");
        deleteRoomButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteRoomButtonActionPerformed(evt);
            }
        });

        RoomDataTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3"
            }
        ));
        RoomDataTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                RoomDataTableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(RoomDataTable);

        roomMsgLabel.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        roomMsgLabel.setForeground(new java.awt.Color(255, 0, 0));

        lblCapacity.setFont(new java.awt.Font("Tahoma", 2, 14)); // NOI18N
        lblCapacity.setText("Capacity");

        cancelRoomButton.setBackground(new java.awt.Color(102, 255, 255));
        cancelRoomButton.setFont(new java.awt.Font("Tahoma", 2, 11)); // NOI18N
        cancelRoomButton.setText("Reset");
        cancelRoomButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelRoomButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(198, 198, 198)
                        .addComponent(roomMsgLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 444, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(12, 12, 12)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(lblCourseCode, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(lblRoomNumber, javax.swing.GroupLayout.DEFAULT_SIZE, 105, Short.MAX_VALUE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(roomNumber, javax.swing.GroupLayout.DEFAULT_SIZE, 180, Short.MAX_VALUE)
                                    .addComponent(courseCode, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                            .addGroup(layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(lblCapacity, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(capacity, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(addRoomButton, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(17, 17, 17)
                                .addComponent(updateRoomButton, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(deleteRoomButton, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(cancelRoomButton, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(33, 33, 33)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 475, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(171, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(roomMsgLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblRoomNumber, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(roomNumber, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblCourseCode, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(courseCode, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblCapacity, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(capacity, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(addRoomButton)
                            .addComponent(updateRoomButton)
                            .addComponent(deleteRoomButton, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(cancelRoomButton, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 161, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(36, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void addRoomButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addRoomButtonActionPerformed
        // TODO add your handling code here:
       try{
           
           if(roomNumber.getText() !=null && !roomNumber.getText().trim().equals("") ){    
                       
               RoomModel roomModel = new RoomModel();
               
                if(!roomModel.isRoomExist(roomNumber.getText())){
               RoomBean roomBean = new RoomBean();
               roomBean.setRoomNumber(roomNumber.getText());
               roomBean.setCourseCode(courseCode.getSelectedItem().toString());
               roomBean.setCapacity(capacity.getText());
               roomModel.addRoom(roomBean);
           roomMsgLabel.setText("Registration is Successfull.");           
           loadDataIntoJTable();                      
            roomNumber.setText("");
            capacity.setText("");
                }else{
                    roomMsgLabel.setText("Room Number all ready existed.");
                }
            
           }else{
               roomMsgLabel.setText("Room Number Should not be Empty.");
           }
       }catch(Exception exp){
           JOptionPane.showMessageDialog(null, exp);
       } 
        
    }//GEN-LAST:event_addRoomButtonActionPerformed

    private void RoomDataTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_RoomDataTableMouseClicked
        // TODO add your handling code here:
       try{
          int rowIndex = RoomDataTable.getSelectedRow();
          
           roomNumber.setText(RoomDataTable.getValueAt(rowIndex, 0).toString());
           courseCode.setSelectedItem(RoomDataTable.getValueAt(rowIndex, 1).toString());          
           capacity.setText(RoomDataTable.getValueAt(rowIndex, 2).toString());          
                 
       }catch(Exception exp){
          // JOptionPane.showMessageDialog(null, exp);
       }
    }//GEN-LAST:event_RoomDataTableMouseClicked

    private void updateRoomButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateRoomButtonActionPerformed
        // TODO add your handling code here:
        try{
           
           if(roomNumber.getText() !=null && !roomNumber.getText().trim().equals("") ){    
                      
               RoomModel roomModel = new RoomModel();
                if(roomModel.isRoomExist(roomNumber.getText())){
               RoomBean roomBean = new RoomBean();
               roomBean.setRoomNumber(roomNumber.getText());
               roomBean.setCourseCode(courseCode.getSelectedItem().toString());
               roomBean.setCapacity(capacity.getText());
               roomModel.updateRoom(roomBean);
           roomMsgLabel.setText("Updation is Successfull.");           
           loadDataIntoJTable();                      
                        
           }else{
               roomMsgLabel.setText("Room Number does not exist.");
           }
           }else{
               roomMsgLabel.setText("Room Number Should not be Empty.");
           }
       }catch(Exception exp){
           JOptionPane.showMessageDialog(null, exp);
       } 
        
    }//GEN-LAST:event_updateRoomButtonActionPerformed

    private void deleteRoomButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteRoomButtonActionPerformed
        // TODO add your handling code here:
        try{
           
           if(roomNumber.getText() !=null && !roomNumber.getText().trim().equals("") ){    
                       
           RoomModel roomModel = new RoomModel();
         boolean flag =  roomModel.deleteRoom(roomNumber.getText());
         if(flag){
           roomMsgLabel.setText("Deletion is Successfull.");        
         }else{
             roomMsgLabel.setText("Room Number does not exist.");
         }
           loadDataIntoJTable();                      
            roomNumber.setText("");
            capacity.setText("");
            
           }else{
               roomMsgLabel.setText("Room Number Should not be Empty.");
           }
       }catch(Exception exp){
           JOptionPane.showMessageDialog(null, exp);
       } 
        
    }//GEN-LAST:event_deleteRoomButtonActionPerformed

    private void cancelRoomButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelRoomButtonActionPerformed
        // TODO add your handling code here:
            roomNumber.setText("");
            capacity.setText("");
          
    }//GEN-LAST:event_cancelRoomButtonActionPerformed

    
    
    public void loadDataIntoJTable() throws Exception{
    	
    	Connection con = DBUtil.getDataSource().getConnection();	
        String selectSchoolsSql = "Select * From Room";
     	PreparedStatement ps =	con.prepareStatement(selectSchoolsSql);
     	ResultSet rs = ps.executeQuery();		
        RoomDataTable.setModel(DbUtils.resultSetToTableModel(rs));
                rs.close();
                ps.close();
                con.close();
    }

    public JTable getRoomDataTable() {
        return RoomDataTable;
    }

    public JButton getAddRoomButton() {
        return addRoomButton;
    }

    public JButton getCancelRoomButton() {
        return cancelRoomButton;
    }

    public JTextField getCapacity() {
        return capacity;
    }

    public JComboBox<String> getCourseCode() {
        return courseCode;
    }

    public JButton getDeleteRoomButton() {
        return deleteRoomButton;
    }

    public JScrollPane getjScrollPane1() {
        return jScrollPane1;
    }

    public JLabel getLblCapacity() {
        return lblCapacity;
    }

    public JLabel getLblCourseCode() {
        return lblCourseCode;
    }

    public JLabel getLblRoomNumber() {
        return lblRoomNumber;
    }

    public JLabel getRoomMsgLabel() {
        return roomMsgLabel;
    }

    public JTextField getRoomNumber() {
        return roomNumber;
    }

    public JButton getUpdateRoomButton() {
        return updateRoomButton;
    }

    
  
     
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable RoomDataTable;
    private javax.swing.JButton addRoomButton;
    private javax.swing.JButton cancelRoomButton;
    private javax.swing.JTextField capacity;
    private javax.swing.JComboBox<String> courseCode;
    private javax.swing.JButton deleteRoomButton;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblCapacity;
    private javax.swing.JLabel lblCourseCode;
    private javax.swing.JLabel lblRoomNumber;
    private javax.swing.JLabel roomMsgLabel;
    private javax.swing.JTextField roomNumber;
    private javax.swing.JButton updateRoomButton;
    // End of variables declaration//GEN-END:variables
}
